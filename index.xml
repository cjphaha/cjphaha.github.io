<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>氕氘氚</title>
        <link>http://cjpa.top/</link>
        <description>氕氘氚</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>caorcjp@gmail.com (氕氘氚)</managingEditor>
            <webMaster>caorcjp@gmail.com (氕氘氚)</webMaster><lastBuildDate>Sat, 16 Jan 2021 13:08:35 &#43;0800</lastBuildDate>
            <atom:link href="http://cjpa.top/index.xml" rel="self" type="application/rss+xml" />
        <item>
    <title>Raft详解</title>
    <link>http://cjpa.top/posts/raft%E8%AF%A6%E8%A7%A3/</link>
    <pubDate>Sat, 16 Jan 2021 13:08:35 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://cjpa.top/posts/raft%E8%AF%A6%E8%A7%A3/</guid>
    <description><![CDATA[Raft和Paxos 背景介绍 分布式事务 分布式事务指事务的操作位于不同的分布式系统节点上，需要保证事务的ACID特性。 解决这种分布式一致性问题]]></description>
</item><item>
    <title>Golang GC</title>
    <link>http://cjpa.top/posts/golang-gc/</link>
    <pubDate>Mon, 04 Jan 2021 16:13:04 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://cjpa.top/posts/golang-gc/</guid>
    <description><![CDATA[Garbage Collection GC就是垃圾回收机制，对于高级语言来说是必须的，因为需要高度关注业务，而不是把精力放在管理垃圾上面 Gc 自动释放、垃圾回收、三色标记法、内存]]></description>
</item><item>
    <title>Golang GMP原理</title>
    <link>http://cjpa.top/posts/golang-gmp%E5%8E%9F%E7%90%86/</link>
    <pubDate>Mon, 04 Jan 2021 00:39:53 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://cjpa.top/posts/golang-gmp%E5%8E%9F%E7%90%86/</guid>
    <description><![CDATA[GPM 多进程和多线程解决了阻塞的问题 但是面临着很多新的问题 多个线程之间切换会浪费很多的切换成本 进程/线程数量越多，切换成本也就越大，也就越浪费 多]]></description>
</item><item>
    <title>关于堆内存和栈内存</title>
    <link>http://cjpa.top/posts/%E5%85%B3%E4%BA%8E%E5%A0%86%E5%86%85%E5%AD%98%E5%92%8C%E6%A0%88%E5%86%85%E5%AD%98/</link>
    <pubDate>Sun, 03 Jan 2021 13:37:24 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://cjpa.top/posts/%E5%85%B3%E4%BA%8E%E5%A0%86%E5%86%85%E5%AD%98%E5%92%8C%E6%A0%88%E5%86%85%E5%AD%98/</guid>
    <description><![CDATA[栈内存和堆内存 栈内存:栈内存首先是一片内存区域，存储的都是局部变量，凡是定义在方法中的都是局部变量（方法外的是全局变量），for循环内部定义]]></description>
</item><item>
    <title>常见的sql语句用法</title>
    <link>http://cjpa.top/posts/%E5%B8%B8%E8%A7%81%E7%9A%84sql%E8%AF%AD%E5%8F%A5%E7%94%A8%E6%B3%95/</link>
    <pubDate>Sun, 03 Jan 2021 13:33:59 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://cjpa.top/posts/%E5%B8%B8%E8%A7%81%E7%9A%84sql%E8%AF%AD%E5%8F%A5%E7%94%A8%E6%B3%95/</guid>
    <description><![CDATA[SQL SQL分为两个部分，一个是操作语言（DML）。一个是数据定义语言（DDL） 查询和更新指令构成了SQL的DML部分 SELECT——从数据库表]]></description>
</item><item>
    <title>MyISAM和InnoDB的区别</title>
    <link>http://cjpa.top/posts/myisam%E5%92%8Cinnodb%E7%9A%84%E5%8C%BA%E5%88%AB/</link>
    <pubDate>Sun, 03 Jan 2021 13:33:00 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://cjpa.top/posts/myisam%E5%92%8Cinnodb%E7%9A%84%E5%8C%BA%E5%88%AB/</guid>
    <description><![CDATA[MyISAM和InnoDB的区别 关于数据库引擎： mysql现在默认使用innodb mysql5.5之前使用myisam myisam innodb 事务支持 不支持 支持]]></description>
</item><item>
    <title>Golang Make和new的区别</title>
    <link>http://cjpa.top/posts/golang-make%E5%92%8Cnew%E7%9A%84%E5%8C%BA%E5%88%AB/</link>
    <pubDate>Sun, 03 Jan 2021 13:30:03 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://cjpa.top/posts/golang-make%E5%92%8Cnew%E7%9A%84%E5%8C%BA%E5%88%AB/</guid>
    <description><![CDATA[new和make new和make都是内置函数，主要用来创建分配内存类型 new new（T）可以创建一个没有任何数据的T类型的指针，并且返回该实例的]]></description>
</item><item>
    <title>Redis</title>
    <link>http://cjpa.top/posts/redis/</link>
    <pubDate>Sun, 03 Jan 2021 13:26:49 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://cjpa.top/posts/redis/</guid>
    <description><![CDATA[Redis Redis 是完全开源的，遵守 BSD 协议，是一个高性能的 key-value 数据库。 Redis 与其他 key - value 缓存产品有以下三个特点： Redis支持数据的持久化，可以将内存中的数据保]]></description>
</item><item>
    <title>Mysql存储过程</title>
    <link>http://cjpa.top/posts/mysql%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B/</link>
    <pubDate>Sun, 03 Jan 2021 13:25:50 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://cjpa.top/posts/mysql%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B/</guid>
    <description><![CDATA[MySQL存储过程 存储过程（Stored Procedure）是一种在数据库中存储复杂程序，以便外部程序调用的一种数据库对象。 存储过程是为了完]]></description>
</item><item>
    <title>牛客mysql题解</title>
    <link>http://cjpa.top/posts/%E7%89%9B%E5%AE%A2mysql%E9%A2%98%E8%A7%A3/</link>
    <pubDate>Sun, 03 Jan 2021 13:22:33 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://cjpa.top/posts/%E7%89%9B%E5%AE%A2mysql%E9%A2%98%E8%A7%A3/</guid>
    <description><![CDATA[链接： https://www.nowcoder.com/ta/sql SQL1 SELECT * from employees Order BY hire_date DESC LIMIT 1; SQL2 -- OFFSET要在limit后面，这样可以选出倒数第三个 SELECT * from employees Order BY hire_date DESC LIMIT 1 OFFSET 2; SQL3 SELECT salaries.*,dept_manager.dept_no FROM salaries LEFT JOIN dept_manager ON salaries.emp_no = dept_manager.emp_no WHERE salaries.to_date=&#39;9999-01-01&#39;]]></description>
</item></channel>
</rss>
